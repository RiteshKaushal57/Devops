pipeline {
    agent any

    environment {
        // SonarQube token stored in Jenkins credentials (type: Secret Text)
        SONAR_TOKEN = credentials('sonarqube-token')
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Pull code from GitHub
                git url: 'https://github.com/RiteshKaushal57/Devops.git', branch: 'main'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('CICD&Jenkins/Projects/node-hello') {
                    sh 'npm install'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('CICD&Jenkins/Projects/node-hello') {
                    sh 'npm test'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('CICD&Jenkins/Projects/node-hello') {
                    sh """
                    npx sonar-scanner \
                        -Dsonar.projectKey=node-hello \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://localhost:9000 \
                        -Dsonar.login=$SONAR_TOKEN
                    """
                }
            }
        }

        stage('Build & Deploy Docker') {
            steps {
                dir('CICD&Jenkins/Projects/node-hello') {
                    // Build Docker image
                    sh 'docker build -t node-hello:latest .'

                    // Stop and remove existing container if running
                    sh 'docker rm -f node-hello || true'

                    // Run new container
                    sh 'docker run -d -p 3000:3000 --name node-hello node-hello:latest'
                }
            }
        }
    }

    post {
        always {
            echo 'CI/CD pipeline completed'
        }
        success {
            echo 'Build, analysis, and deployment successful!'
        }
        failure {
            echo 'Pipeline failed at some stage!'
        }
    }
}
