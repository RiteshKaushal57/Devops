pipeline {
    agent any

    environment {
        // Jenkins credentials for SonarQube (Secret Text)
        SONAR_TOKEN = credentials('sonarqube-token')

        // App and Helm details
        APP_NAME = "node-hello"
        IMAGE_TAG = "latest"
        CHART_PATH = "CICD&Jenkins/Projects/node-hello/node-hello-chart"
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo "üîπ Checking out source code..."
                git url: 'https://github.com/RiteshKaushal57/Devops.git', branch: 'main'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('CICD&Jenkins/Projects/node-hello') {
                    echo "üì¶ Installing dependencies..."
                    sh 'npm install'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('CICD&Jenkins/Projects/node-hello') {
                    echo "üß™ Running tests..."
                    sh 'npm test'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('CICD&Jenkins/Projects/node-hello') {
                    echo "üîç Running SonarQube analysis..."
                    sh """
                    npx sonar-scanner \
                        -Dsonar.projectKey=node-hello \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://localhost:9000 \
                        -Dsonar.login=$SONAR_TOKEN
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('CICD&Jenkins/Projects/node-hello') {
                    echo "üê≥ Building Docker image..."
                    sh "docker build -t ${APP_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Deploy via Helm on Minikube') {
            steps {
                echo "üöÄ Deploying application on Kubernetes using Helm..."
                sh """
                kubectl cluster-info
                helm upgrade --install node-hello-release "CICD&Jenkins/Projects/node-hello/node-hello-chart" --values "CICD&Jenkins/Projects/node-hello/node-hello-chart/values.yaml"
        """
            }
        }

        stage('Verify Deployment') {
            steps {
                echo "üîé Checking deployment status..."
                sh "kubectl get pods -l app.kubernetes.io/instance=${APP_NAME}-release"
                sh "kubectl get svc -l app.kubernetes.io/instance=${APP_NAME}-release"
            }
        }
    }

    post {
        always {
            echo 'üì¶ CI/CD pipeline completed.'
        }
        success {
            echo '‚úÖ Build, test, analysis, and deployment successful!'
        }
        failure {
            echo '‚ùå Pipeline failed at some stage!'
        }
    }
}
