# Default values for node-hello-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Number of pod replicas
replicaCount: 1

# Container image settings
image:
  # Use local image built by Jenkins
  repository: node-hello
  tag: "latest"
  # Prevent pulling from Docker Hub
  pullPolicy: Never

# Optional: if using private registry credentials
imagePullSecrets: []

# Override chart name if needed
nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod annotations and labels
podAnnotations: {}
podLabels: {}

# Pod security context (optional)
podSecurityContext: {}
securityContext: {}

# Kubernetes service configuration
service:
  # Expose via NodePort so you can access locally
  type: LoadBalancer
  port: 3000
  targetPort: 3000
  nodePort: 32000  # You can choose any available port between 30000–32767

# Disable Ingress for now (we’ll use NodePort)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: node-hello.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Disable Gateway API for now
httpRoute:
  enabled: false
  annotations: {}
  parentRefs:
    - name: gateway
      sectionName: http
  hostnames:
    - node-hello.local
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /

# Resource requests and limits (optional)
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Health checks (simple for Node.js app)
livenessProbe:
  httpGet:
    path: /
    port: 3000
readinessProbe:
  httpGet:
    path: /
    port: 3000

# Disable autoscaling for now
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

# Volumes (none needed for this app)
volumes: []
volumeMounts: []

# Scheduling configs
nodeSelector: {}
tolerations: []
affinity: {}
